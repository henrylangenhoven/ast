name: üöÄ cPanel Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üöö Checkout Latest Code
        uses: actions/checkout@v4.2.2

      - name: üöÄ Deploy to cPanel
        id: deploy
        uses: paxha/cpanel-deploy@v4.0
        with:
          host: 'https://agroskytech.co.za'
          username: '${{ secrets.CPANEL_USERNAME }}'
          api_token: '${{ secrets.CPANEL_TOKEN }}'
          remote_path: '/home/agroskyt/repositories/ast'
          branch: main
          deploy: true

      # ‚úÖ Create GitHub Deployment (Using cURL)
      - name: üöÄ Register Deployment in GitHub
        id: create_deployment
        run: |
          RESPONSE=$(curl -s -X POST -H "Authorization: token ${{ secrets.DEPLOYMENT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/deployments \
          -d '{
            "ref": "${{ github.sha }}",
            "environment": "production",
            "description": "Deploying to cPanel",
            "auto_merge": false,
            "required_contexts": []
          }')

          DEPLOYMENT_ID=$(echo $RESPONSE | jq -r .id)

          if [ "$DEPLOYMENT_ID" = "null" ]; then
            echo "Error creating deployment: $RESPONSE"
            exit 1
          fi

          echo "Deployment ID: $DEPLOYMENT_ID"
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_ENV

      # ‚úÖ Mark Deployment as Successful
      - name: ‚úÖ Update Deployment Status (Success)
        if: success()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DEPLOYMENT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/deployments/${{ env.deployment_id }}/statuses \
          -d '{
            "state": "success",
            "environment_url": "https://agroskytech.co.za",
            "log_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      # ‚ùå Mark Deployment as Failed (if needed)
      - name: ‚ùå Update Deployment Status (Failure)
        if: failure()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DEPLOYMENT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/deployments/${{ env.deployment_id }}/statuses \
          -d '{
            "state": "failure",
            "log_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
