name: üöÄ cPanel Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üöö Checkout Latest Code
        uses: actions/checkout@v4.2.2

      - name: üöÄ Deploy to cPanel
        id: deploy
        uses: paxha/cpanel-deploy@v4.0
        with:
          host: 'https://agroskytech.co.za'
          username: '${{ secrets.CPANEL_USERNAME }}'
          api_token: '${{ secrets.CPANEL_TOKEN }}'
          remote_path: '/home/agroskyt/repositories/ast'
          branch: main
          deploy: true

      # ‚úÖ Create a GitHub Deployment
      - name: üöÄ Create GitHub Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/deployments
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          ref: ${{ github.sha }}
          environment: production
          auto_merge: false
          description: "Deploying to cPanel"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ‚úÖ Mark Deployment as Successful
      - name: ‚úÖ Update Deployment Status (Success)
        if: success()
        uses: octokit/request-action@v2.x
        id: mark_success
        with:
          route: POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          deployment_id: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          state: success
          environment_url: "https://agroskytech.co.za"
          log_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ‚ùå Mark Deployment as Failed (If Needed)
      - name: ‚ùå Update Deployment Status (Failure)
        if: failure()
        uses: octokit/request-action@v2.x
        id: mark_failed
        with:
          route: POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          deployment_id: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          state: failure
          log_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
